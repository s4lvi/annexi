// server/socket/index.js
const lobbyPlayers = {};

module.exports = function (io) {
  io.on("connection", (socket) => {
    console.log("New client connected:", socket.id);

    socket.on("joinLobby", (data) => {
      const { lobbyId, username, _id } = data; // include _id from the client
      socket.join(`lobby-${lobbyId}`);
      if (!lobbyPlayers[lobbyId]) {
        lobbyPlayers[lobbyId] = [];
      }
      lobbyPlayers[lobbyId].push({ socketId: socket.id, username, _id });
      io.to(`lobby-${lobbyId}`).emit("lobbyUpdate", {
        players: lobbyPlayers[lobbyId],
        message: `${username} joined the lobby.`,
      });
    });

    socket.on("startGame", (data) => {
      // data contains lobbyId and mapData (generated by the API)
      console.log("Starting game for lobby:", data.lobbyId);
      io.to(`lobby-${data.lobbyId}`).emit("gameStarted", {
        mapData: data.mapData,
        players: lobbyPlayers[data.lobbyId],
      });
    });

    socket.on("disconnect", () => {
      console.log("Client disconnected:", socket.id);
      // Remove the disconnected socket from all lobby lists.
      for (const lobbyId in lobbyPlayers) {
        const beforeCount = lobbyPlayers[lobbyId].length;
        lobbyPlayers[lobbyId] = lobbyPlayers[lobbyId].filter(
          (p) => p.socketId !== socket.id
        );
        if (lobbyPlayers[lobbyId].length !== beforeCount) {
          io.to(`lobby-${lobbyId}`).emit("lobbyUpdate", {
            players: lobbyPlayers[lobbyId],
            message: `A player left the lobby.`,
          });
        }
      }
    });
  });
};
